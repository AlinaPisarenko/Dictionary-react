{"ast":null,"code":"var _jsxFileName = \"/Users/Alina/Desktop/dictionary-react/src/Results.js\";\nimport React from \"react\";\nimport Meaning from \"./Meaning\";\nimport Phonetic from \"./Phonetic\";\nimport \"./Results.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Results(props) {\n  if (props.results) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Results\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row align-items-start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: props.results.word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Phonetic, {\n            phonetic: props.results.phonetics[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"col\",\n          children: props.results.meanings.map(function (meaning, index) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Meaning, {\n                meaning: meaning\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n}\n_c = Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["/Users/Alina/Desktop/dictionary-react/src/Results.js"],"names":["React","Meaning","Phonetic","Results","props","results","word","phonetics","meanings","map","meaning","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,eAAP;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACrC,MAAIA,KAAK,CAACC,OAAV,EAAmB;AACjB,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA,gCACE;AAAK,UAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAS,UAAA,SAAS,EAAC,KAAnB;AAAA,kCACE;AAAA,sBAAKD,KAAK,CAACC,OAAN,CAAcC;AAAnB;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE,QAAC,QAAD;AAAU,YAAA,QAAQ,EAAEF,KAAK,CAACC,OAAN,CAAcE,SAAd,CAAwB,CAAxB;AAApB;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE;AAAS,UAAA,SAAS,EAAC,KAAnB;AAAA,oBACGH,KAAK,CAACC,OAAN,CAAcG,QAAd,CAAuBC,GAAvB,CAA2B,UAAUC,OAAV,EAAmBC,KAAnB,EAA0B;AACpD,gCACE;AAAA,qCACE,QAAC,OAAD;AAAS,gBAAA,OAAO,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF,eAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,WANA;AADH;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD,GAtBD,MAsBO;AACL,WAAO,IAAP;AACD;AACF;KA1BuBR,O","sourcesContent":["import React from \"react\";\nimport Meaning from \"./Meaning\";\nimport Phonetic from \"./Phonetic\";\nimport \"./Results.css\";\n\nexport default function Results(props) {\n  if (props.results) {\n    return (\n      <div className=\"Results\">\n        <div class=\"container\">\n          <div class=\"row align-items-start\"></div>\n          <section className=\"col\">\n            <h2>{props.results.word}</h2>\n\n            <Phonetic phonetic={props.results.phonetics[0]} />\n          </section>\n          <section className=\"col\">\n            {props.results.meanings.map(function (meaning, index) {\n              return (\n                <div key={index}>\n                  <Meaning meaning={meaning} />\n                </div>\n              );\n            })}\n          </section>\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}