{"ast":null,"code":"var _jsxFileName = \"/Users/Alina/Desktop/dictionary-react/src/Dictionary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Dictionary.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dictionary() {\n  _s();\n\n  let [keyWord, setKeyWord] = useState(null);\n\n  function search(event) {\n    event.preventDefault();\n    console.log(event);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Dictionary\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: search,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        onChange: handleKeywordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dictionary, \"XVzP2kat5xABkGGdSLuV0Q73dYs=\");\n\n_c = Dictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dictionary\");","map":{"version":3,"sources":["/Users/Alina/Desktop/dictionary-react/src/Dictionary.js"],"names":["React","useState","Dictionary","keyWord","setKeyWord","search","event","preventDefault","console","log","handleKeywordChange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,kBAAP;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,IAAD,CAApC;;AAEA,WAASI,MAAT,CAAgBC,KAAhB,EAAuB;AACrBA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAED,MAAhB;AAAA,6BACE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,QAAQ,EAAEK;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAduBR,U;;KAAAA,U","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Dictionary.css\";\n\nexport default function Dictionary() {\n  let [keyWord, setKeyWord] = useState(null);\n\n  function search(event) {\n    event.preventDefault();\n    console.log(event);\n  }\n  return (\n    <div className=\"Dictionary\">\n      <form onSubmit={search}>\n        <input type=\"search\" onChange={handleKeywordChange} />\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}