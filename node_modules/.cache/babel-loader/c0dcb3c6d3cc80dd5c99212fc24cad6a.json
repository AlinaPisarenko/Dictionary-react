{"ast":null,"code":"var _jsxFileName = \"/Users/Alina/Desktop/dictionary-react/src/Synonyms.js\";\nimport React from \"react\";\nimport \"./Synonyms.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Synonyms(props) {\n  if (props.synonym) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Similar\",\n      children: [\"Similar:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"Synonyms\",\n        children: [\"Similar:\", props.synonym.map(function (synonym, index) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: synonym\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 20\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n}\n_c = Synonyms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Synonyms\");","map":{"version":3,"sources":["/Users/Alina/Desktop/dictionary-react/src/Synonyms.js"],"names":["React","Synonyms","props","synonym","map","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,MAAIA,KAAK,CAACC,OAAV,EAAmB;AACjB,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,0CAEE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,+BAEGD,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAkB,UAAUD,OAAV,EAAmBE,KAAnB,EAA0B;AAC3C,8BAAO;AAAA,sBAAiBF;AAAjB,aAASE,KAAT;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GAZD,MAYO;AACL,WAAO,IAAP;AACD;AACF;KAhBuBJ,Q","sourcesContent":["import React from \"react\";\nimport \"./Synonyms.css\";\n\nexport default function Synonyms(props) {\n  if (props.synonym) {\n    return (\n      <div className=\"Similar\">\n        Similar:\n        <ul className=\"Synonyms\">\n          Similar:\n          {props.synonym.map(function (synonym, index) {\n            return <li key={index}>{synonym}</li>;\n          })}\n        </ul>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}